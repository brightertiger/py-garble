name: Release Documentation

on:
  release:
    types: [ published ]

jobs:
  build-release-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Extract version from release
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "version_clean=${VERSION#v}" >> $GITHUB_OUTPUT
        echo "Released version: $VERSION"
    
    - name: Update documentation version
      run: |
        VERSION_CLEAN=${{ steps.version.outputs.version_clean }}
        echo "Updating docs version to: $VERSION_CLEAN"
        
        # Update conf.py
        sed -i "s/version = '.*'/version = '$VERSION_CLEAN'/" docs/conf.py
        sed -i "s/release = '.*'/release = '$VERSION_CLEAN'/" docs/conf.py
        
        # Update README version in docs
        sed -i "s/version = '.*'/version = '$VERSION_CLEAN'/" docs/index.rst || true
    
    - name: Build documentation
      run: |
        cd docs
        make clean
        make html
    
    - name: Create versioned documentation
      run: |
        VERSION_CLEAN=${{ steps.version.outputs.version_clean }}
        mkdir -p docs/_build/html/versions
        cp -r docs/_build/html/* docs/_build/html/versions/$VERSION_CLEAN/ 2>/dev/null || true
    
    - name: Deploy versioned documentation
      uses: actions/deploy-pages@v4
      with:
        path: ./docs/_build/html
